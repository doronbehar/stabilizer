var searchIndex = JSON.parse('{\
"ad9959":{"doc":"","t":[13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,3,4,16,13,13,13,13,13,13,8,13,13,4,13,13,3,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10],"n":["ACR","Ad9959","Bounds","CFR","CFTW0","CPOW0","CSR","CW1","CW10","CW11","CW12","CW13","CW14","CW15","CW2","CW3","CW4","CW5","CW6","CW7","CW8","CW9","Channel","Check","DdsConfig","Error","Error","FDW","FR1","FR2","Four","FourBitSerial","Frequency","Interface","Interface","LSRR","Mode","One","Pin","ProfileSerializer","RDW","Register","SingleBitThreeWire","SingleBitTwoWire","Three","Two","TwoBitSerial","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","configure_mode","eq","eq","finalize","fmt","freeze","from","from","from","from","from","from","from","get_amplitude","get_frequency","get_phase","get_reference_clock_frequency","get_reference_clock_multiplier","into","into","into","into","into","into","into","new","read","self_test","serializer","set_amplitude","set_frequency","set_phase","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_channels","write"],"q":["ad9959","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A device driver for the AD9959 direct digital synthesis …","","","","","","","","","","","","","","","","","","","","","Specifies an output channel of the AD9959 DDS chip.","","The frozen DDS configuration.","Possible errors generated by the AD9959 driver.","","","","","","","","A trait that allows a HAL to provide a means of …","","","Indicates various communication modes of the DDS. The …","","","Represents a means of serializing a DDS profile for …","","The configuration registers within the AD9959 DDS device. …","","","","","","","","","","","","","","","","","","","","","","","","","Get the serialized profile as a slice of 32-bit words.","","Finalize DDS configuration","","","","","","","","Get the configured amplitude of a channel.","Get the frequency of a channel.","Get the current phase of a specified channel.","Get the current reference clock frequency in Hz.","Get the current reference clock multiplier.","","","","","","","","Construct and initialize the DDS.","","Perform a self-test of the communication interface.","Create a serializer that can be used for generating a …","Configure the amplitude of a specified channel.","Configure the frequency of a specified channel.","Configure the phase of a specified channel.","","","","","","","","","","","","","","","","","","","","","","Update a number of channels with the requested profile.",""],"i":[1,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,0,0,3,1,1,1,4,5,2,0,2,1,0,4,2,0,1,0,5,5,4,4,5,6,1,7,8,5,4,2,6,1,7,8,5,4,2,5,4,3,5,4,8,2,6,6,1,7,8,5,4,2,6,6,6,6,6,6,1,7,8,5,4,2,6,3,6,7,6,6,6,6,1,7,8,5,4,2,6,1,7,8,5,4,2,6,1,7,8,5,4,2,8,3],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mode",4]],[[],["channel",4]],[[["mode",4]],["result",4]],[[["mode",4]],["bool",15]],[[["channel",4]],["bool",15]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["channel",4]],[["result",4,["f32","error"]],["f32",15],["error",4]]],[[["channel",4]],[["result",4,["f32","error"]],["f32",15],["error",4]]],[[["channel",4]],[["result",4,["f32","error"]],["f32",15],["error",4]]],[[],["f32",15]],[[],[["result",4,["u8","error"]],["u8",15],["error",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mode",4],["f32",15],["u8",15]],[["error",4],["result",4,["error"]]]],[[["u8",15]],["result",4]],[[],[["result",4,["bool","error"]],["error",4],["bool",15]]],[[],["profileserializer",3]],[[["f32",15],["channel",4]],[["result",4,["f32","error"]],["f32",15],["error",4]]],[[["f32",15],["channel",4]],[["result",4,["f32","error"]],["f32",15],["error",4]]],[[["f32",15],["channel",4]],[["result",4,["f32","error"]],["f32",15],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["option",4,["u16"]],["u32",15],["u16",15],["option",4,["u32"]]]],[[["u8",15]],["result",4]]],"p":[[4,"Register"],[4,"Error"],[8,"Interface"],[4,"Channel"],[4,"Mode"],[3,"Ad9959"],[3,"DdsConfig"],[3,"ProfileSerializer"]]},\
"dual_iir":{"doc":"Dual IIR","t":[17,17,17,17,3,12,12,0,11,11,11,11,11,11,12,11,12,11,12,12,11,12,11,11,11,12,5,5,5,3,6,5,5,5,5,3,5,3,3,3,3,3,5,5,5,3,3,3,3,3,3,3,3,3,3,5,5,5,3,3,3,3,3,3,3,5,5,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,0,5,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,5,12,12,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,11,11,11,11,11,11,12,12,12,12,0,5,12,12,12,12,12,0,12,12,12,0,5,0,5,0,5,0,5,12,12,12,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,12,3,12,0,5,3,3,12,12,12,12,12,12,12,12,3,0,3,12,12,12,12,0,3,12,12,12],"n":["BATCH_SIZE","IIR_CASCADE_LENGTH","SAMPLE_TICKS_LOG2","SCALE","Settings","afe","allow_hold","app","borrow","borrow_mut","clone","default","deserialize","fmt","force_hold","from","iir_ch","into","signal_generator","stream_target","string_set","telemetry_period","try_from","try_into","type_id","0","DCMI","DMA1_STR4","ETH","Local","Monotonic","SPI2","SPI3","SPI4","SPI5","Shared","TIM15","__rtic_internal_Monotonics","__rtic_internal_eth_Context","__rtic_internal_ethernet_linkSharedResources","__rtic_internal_ethernet_link_Context","__rtic_internal_ethernet_link_Monotonic_SpawnHandle","__rtic_internal_ethernet_link_Monotonic_spawn_after","__rtic_internal_ethernet_link_Monotonic_spawn_at","__rtic_internal_ethernet_link_spawn","__rtic_internal_idleSharedResources","__rtic_internal_idle_Context","__rtic_internal_init_Context","__rtic_internal_processLocalResources","__rtic_internal_processSharedResources","__rtic_internal_process_Context","__rtic_internal_settings_updateLocalResources","__rtic_internal_settings_updateSharedResources","__rtic_internal_settings_update_Context","__rtic_internal_settings_update_Monotonic_SpawnHandle","__rtic_internal_settings_update_Monotonic_spawn_after","__rtic_internal_settings_update_Monotonic_spawn_at","__rtic_internal_settings_update_spawn","__rtic_internal_spi2_Context","__rtic_internal_spi3_Context","__rtic_internal_spi4_Context","__rtic_internal_spi5_Context","__rtic_internal_telemetry_taskSharedResources","__rtic_internal_telemetry_task_Context","__rtic_internal_telemetry_task_Monotonic_SpawnHandle","__rtic_internal_telemetry_task_Monotonic_spawn_after","__rtic_internal_telemetry_task_Monotonic_spawn_at","__rtic_internal_telemetry_task_spawn","adcs","adcs","afes","afes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","cancel","cancel","core","cs","dacs","dacs","device","digital_inputs","digital_inputs","eth","eth","ethernet_link","ethernet_link","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generator","generator","idle","idle","iir_state","iir_state","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","local","local","monotonics","network","network","network","network","network","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","process","process","reschedule_after","reschedule_after","reschedule_after","reschedule_at","reschedule_at","reschedule_at","settings","settings","settings","settings","settings_update","settings_update","shared","shared","shared","shared","shared","shared_resources","signal_generator","signal_generator","signal_generator","spi2","spi2","spi3","spi3","spi4","spi4","spi5","spi5","telemetry","telemetry","telemetry","telemetry_task","telemetry_task","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Monotonic","SharedResources","network","SharedResources","network","Monotonic","now","LocalResources","SharedResources","adcs","dacs","digital_inputs","generator","iir_state","settings","signal_generator","telemetry","LocalResources","Monotonic","SharedResources","afes","network","settings","signal_generator","Monotonic","SharedResources","network","settings","telemetry"],"q":["dual_iir","","","","","","","","","","","","","","","","","","","","","","","","","dual_iir::appdual_iir::app::ethernet_link","","","dual_iir::app::idle","","dual_iir::app::monotonics","dual_iir::app::monotonics::Monotonic","dual_iir::app::process","","","","","","","","","","dual_iir::app::settings_update","","","","","","","dual_iir::app::telemetry_task","","","",""],"d":["","","","","","Configure the Analog Front End (AFE) gain.","Specified true if DI1 should be used as a “hold” input.","The RTIC application module","","","","","","","Specified true if “hold” should be forced regardless …","","Configure the IIR filter parameters.","","Specifies the config for signal generators to add on to …","Specifies the target for data livestreaming.","","Specifies the telemetry output period in seconds.","","","","","Interrupt handler to dispatch tasks at priority 1","Main DSP processing routine for Stabilizer.","","","User code from within the module","","","","","","","Monotonics used by the system","Execution context","Shared resources <code>ethernet_link</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","Shared resources <code>idle</code> has access to","Execution context","Execution context","Local resources <code>process</code> has access to","Shared resources <code>process</code> has access to","Execution context","Local resources <code>settings_update</code> has access to","Shared resources <code>settings_update</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","Execution context","Execution context","Execution context","Execution context","Shared resources <code>telemetry_task</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Core (Cortex-M) peripherals","Critical section token for init","","","Device peripherals","","","Hardware task","","Software task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Idle loop","","","","Initialization function","User code end","","","","","","","","","","","","","","","","","","","","","","","","","Local Resources this task has access to","Local Resources this task has access to","Holds static methods for each monotonic.","","","","","","","","","","","","","","","","","","","","","","","","Hardware task","Main DSP processing routine for Stabilizer.","","","","","","","","","","","Software task","","Shared Resources this task has access to","Shared Resources this task has access to","Shared Resources this task has access to","Shared Resources this task has access to","Shared Resources this task has access to","","","","","Hardware task","","Hardware task","","Hardware task","","Hardware task","","","","","Software task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shared resources <code>ethernet_link</code> has access to","","Shared resources <code>idle</code> has access to","","This module holds the static implementation for …","Read the current time from this monotonic","Local resources <code>process</code> has access to","Shared resources <code>process</code> has access to","","","","","","","","","Local resources <code>settings_update</code> has access to","","Shared resources <code>settings_update</code> has access to","","","","","","Shared resources <code>telemetry_task</code> has access to","","",""],"i":[0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,3,5,6,3,2,7,8,9,4,10,11,12,13,14,15,16,5,17,18,19,20,21,22,23,24,25,6,3,2,7,8,9,4,10,11,12,13,14,15,16,5,17,18,19,20,21,22,23,24,25,19,22,25,7,7,3,4,7,3,4,0,0,0,0,19,22,25,6,3,2,7,8,9,4,10,11,12,13,14,15,16,5,17,18,19,20,21,22,23,24,25,3,4,0,0,3,4,0,0,6,3,2,7,8,9,4,10,11,12,13,14,15,16,5,17,18,19,20,21,22,23,24,25,11,18,0,6,8,17,20,23,7,8,9,4,10,11,12,13,14,15,16,5,17,18,20,21,23,24,0,0,19,22,25,19,22,25,6,10,17,20,0,0,9,11,18,21,24,0,6,10,17,0,0,0,0,0,0,0,0,6,10,20,0,0,6,3,2,7,8,9,4,10,11,12,13,14,15,16,5,17,18,19,20,21,22,23,24,25,6,3,2,7,8,9,4,10,11,12,13,14,15,16,5,17,18,19,20,21,22,23,24,25,6,3,2,7,8,9,4,10,11,12,13,14,15,16,5,17,18,19,20,21,22,23,24,25,0,0,23,0,8,0,0,0,0,4,4,4,4,4,10,10,10,0,0,0,5,17,17,17,0,0,20,20,20],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[],["settings",3]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],null,[[]],null,[[]],null,null,[[["peekable",3,["split"]],["split",3,["char"]]],[["error",4],["result",4,["error"]]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,[[]],null,null,null,null,null,[[],[["spawnhandle",3],["result",4,["spawnhandle"]]]],[[["systemtimer",3],["instant",3,["systemtimer"]]],[["spawnhandle",3],["result",4,["spawnhandle"]]]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,[[],[["result",4,["spawnhandle"]],["spawnhandle",3]]],[[["systemtimer",3],["instant",3,["systemtimer"]]],[["result",4,["spawnhandle"]],["spawnhandle",3]]],[[],["result",4]],null,null,null,null,null,null,null,[[],[["spawnhandle",3],["result",4,["spawnhandle"]]]],[[["systemtimer",3],["instant",3,["systemtimer"]]],[["spawnhandle",3],["result",4,["spawnhandle"]]]],[[],["result",4]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,[[["context",3]]],null,[[["context",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["context",3]]],null,null,null,[[["context",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["peripherals",3]]],[[["priority",3]]],[[["priority",3]]],[[]],[[["priority",3]]],[[["priority",3]]],[[["priority",3]]],[[["priority",3]]],[[["priority",3]]],[[["priority",3]]],[[["priority",3]]],[[]],[[["priority",3]]],[[["priority",3]]],[[["priority",3]]],[[["priority",3]]],[[["priority",3]]],[[["priority",3]]],null,[[["context",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["systemtimer",3],["instant",3,["systemtimer"]]],["result",4]],[[["systemtimer",3],["instant",3,["systemtimer"]]],["result",4]],[[["systemtimer",3],["instant",3,["systemtimer"]]],["result",4]],null,null,null,null,null,[[["context",3]]],null,null,null,null,null,null,null,null,null,null,[[["context",3]]],null,[[["context",3]]],null,[[["context",3]]],null,[[["context",3]]],null,null,null,null,[[["context",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[],[["systemtimer",3],["instant",3,["systemtimer"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"Settings"],[3,"__rtic_internal_Monotonics"],[3,"Local"],[3,"__rtic_internal_processLocalResources"],[3,"__rtic_internal_settings_updateLocalResources"],[3,"Shared"],[3,"__rtic_internal_init_Context"],[3,"__rtic_internal_idleSharedResources"],[3,"__rtic_internal_idle_Context"],[3,"__rtic_internal_processSharedResources"],[3,"__rtic_internal_process_Context"],[3,"__rtic_internal_eth_Context"],[3,"__rtic_internal_spi2_Context"],[3,"__rtic_internal_spi3_Context"],[3,"__rtic_internal_spi4_Context"],[3,"__rtic_internal_spi5_Context"],[3,"__rtic_internal_settings_updateSharedResources"],[3,"__rtic_internal_settings_update_Context"],[3,"__rtic_internal_settings_update_Monotonic_SpawnHandle"],[3,"__rtic_internal_telemetry_taskSharedResources"],[3,"__rtic_internal_telemetry_task_Context"],[3,"__rtic_internal_telemetry_task_Monotonic_SpawnHandle"],[3,"__rtic_internal_ethernet_linkSharedResources"],[3,"__rtic_internal_ethernet_link_Context"],[3,"__rtic_internal_ethernet_link_Monotonic_SpawnHandle"]]},\
"idsp":{"doc":"","t":[3,3,8,3,3,8,3,3,3,5,10,11,11,11,11,11,11,11,11,11,10,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,5,5,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,11,11,10,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,18,6,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Accu","Complex","ComplexExt","Lockin","Lowpass","MulScaled","PLL","RPLL","Unwrapper","abs","abs_sqr","abs_sqr","add","add","add","add","add_assign","add_assign","add_assign","add_assign","arg","arg","as_","atan2","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","conj","copysign","cossin","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_angle","from_angle","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_str","from_str_radix","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","hash","i","iir","iir_int","im","into","into","into","into","into","into","into","into_iter","inv","inv","is_finite","is_infinite","is_nan","is_normal","is_one","is_zero","l1_norm","log2","log2","macc","macc_i32","mul","mul","mul","mul","mul_add","mul_add_assign","mul_add_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_scaled","mul_scaled","mul_scaled","mul_scaled","ne","ne","neg","new","new","new","next","norm_sqr","one","overflowing_sub","powi","powu","product","product","re","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","saturating_add","saturating_add","saturating_scale","saturating_sub","saturating_sub","scale","serialize","serialize","serialize","set_one","set_zero","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unscale","update","update","update","update","update","zero","IIR","Vec5","ba","borrow","borrow_mut","clone","default","deserialize","fmt","from","get_k","get_x_offset","into","new","set_pi","set_x_offset","string_set","try_from","try_into","type_id","update","y_max","y_min","y_offset","IIR","SHIFT","Vec5","ba","borrow","borrow_mut","clone","default","deserialize","fmt","from","into","string_set","try_from","try_into","type_id","update","y_max","y_min","y_offset"],"q":["idspidsp::iir","","","","","","","","","","","","","","","","","","","","","","","","idsp::iir_int","","","","","","","","","","","","","","","","","","",""],"d":["","A complex number in Cartesian form.","Complex extension trait offering DSP (fast, good accuracy) …","","Arbitrary order, high dynamic range, wide coefficient …","Full scale fixed point multiplication.","Type-II, sampled phase, discrete time PLL","Reciprocal PLL.","Overflow unwrapper.","","","Return the absolute square (the squared magnitude).","","","","","","","","","","Return the angle.","","2-argument arctangent function.","","","","","","","","","","","","","","","","","","","","","","Returns the complex conjugate. i.e. <code>re - i im</code>","","Compute the cosine and sine of an angle. This is ported …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a Complex on the unit circle given an angle.","","","","","","","","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","","","","","","","Returns imaginary unit","","","Imaginary portion of the complex number","","","","","","","","","Returns <code>1/self</code>","","Checks if the given complex number is finite","Checks if the given complex number is infinite","Checks if the given complex number is NaN","Checks if the given complex number is normal","","","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","","log2(power) re full scale approximation","","","","","","","","","","","","","","","","","","","","","","Create a new RPLL instance.","Create a new Complex","","Returns the square of the norm (since <code>T</code> doesn’t …","","Subtract <code>y - x</code> with signed overflow.","Raises <code>self</code> to a signed integer power.","Raises <code>self</code> to an unsigned integer power.","","","Real portion of the complex number","","","","","","","","","","","Combine high and low i32 into a single downscaled i32, …","","","Multiplies <code>self</code> by the scalar <code>t</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divides <code>self</code> by the scalar <code>t</code>.","Update the lockin with a sample taken at a given phase.","Update the filter with a new sample.","Update the PLL with a new phase sample. This needs to be …","Advance the RPLL and optionally supply a new timestamp.","Unwrap a new sample from a sequence and update the …","","IIR configuration.","IIR state and coefficients type.","","","","","","","","","Compute the overall (DC feed-forward) gain.","","","","Configures IIR filter coefficients for …","Convert input (<code>x</code>) offset to equivalent output (<code>y</code>) offset …","","","","","Feed a new input value into the filter, update the filter …","","","","Integer biquad IIR","Coefficient fixed point format: signed Q2.30. Tailored to …","Generic vector for integer IIR filter. This struct is used …","","","","","","","","","","","","","","Feed a new input value into the filter, update the filter …","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,1,2,2,0,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,2,0,0,3,4,5,6,7,8,2,6,8,2,2,2,2,2,2,2,2,2,3,2,3,2,2,2,2,2,2,2,2,3,4,5,6,7,8,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,3,4,5,6,7,8,2,3,2,2,2,2,2,2,2,2,2,1,2,0,0,2,2,2,2,2,2,2,2,2,2,2,9,2,2,2,3,2,2,3,7,2,3,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,0,1,2,2,6,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,2,4,5,6,7,8,2,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["u32",15]],[[]],[[["complex",3]]],[[]],[[["complex",3]]],[[]],[[["complex",3]]],[[["complex",3]]],[[]],[[]],[[],["i32",15]],[[]],[[["i32",15]],["i32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["accu",3]],[[],["lockin",3]],[[],["lowpass",3]],[[],["pll",3]],[[],["rpll",3]],[[],["unwrapper",3]],[[],["complex",3]],[[],["complex",3]],[[]],[[["i32",15]]],[[],["accu",3]],[[],["lockin",3]],[[]],[[],["pll",3]],[[],["rpll",3]],[[],["unwrapper",3]],[[],["complex",3]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["complex"]],["complex",3]]],[[["complex",3]]],[[["complex",3]]],[[]],[[]],[[["complex",3]]],[[]],[[]],[[["complex",3]]],[[["accu",3]],["bool",15]],[[["complex",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["complex",3]],[[]],[[],[["complex",3],["option",4,["complex"]]]],[[],["complex",3]],[[]],[[["i32",15]]],[[["f32",15]],[["complex",3],["option",4,["complex"]]]],[[["f64",15]],[["complex",3],["option",4,["complex"]]]],[[["i128",15]],[["complex",3],["option",4,["complex"]]]],[[["i16",15]],[["complex",3],["option",4,["complex"]]]],[[["i32",15]],[["complex",3],["option",4,["complex"]]]],[[["i64",15]],[["complex",3],["option",4,["complex"]]]],[[["i8",15]],[["complex",3],["option",4,["complex"]]]],[[["isize",15]],[["complex",3],["option",4,["complex"]]]],[[["str",15]],[["result",4,["complex"]],["complex",3]]],[[["str",15],["u32",15]],[["result",4,["complex"]],["complex",3]]],[[["u128",15]],[["complex",3],["option",4,["complex"]]]],[[["u16",15]],[["complex",3],["option",4,["complex"]]]],[[["u32",15]],[["complex",3],["option",4,["complex"]]]],[[["u64",15]],[["complex",3],["option",4,["complex"]]]],[[["u8",15]],[["complex",3],["option",4,["complex"]]]],[[["usize",15]],[["complex",3],["option",4,["complex"]]]],[[]],[[],["complex",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["complex",3]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[],["i32",15]],[[]],[[["i32",15],["u32",15]],["i32",15]],[[["complex",3]]],[[["complex",3]]],[[]],[[]],[[["complex",3]],["complex",3]],[[["complex",3]]],[[["complex",3]]],[[["complex",3]]],[[]],[[["complex",3]]],[[]],[[]],[[["i16",15]]],[[["i32",15]]],[[]],[[["accu",3]],["bool",15]],[[["complex",3]],["bool",15]],[[]],[[["i32",15]]],[[["u8",15]]],[[],["complex",3]],[[],[["i32",15],["option",4,["i32"]]]],[[]],[[],["complex",3]],[[["i32",15]]],[[["i32",15]],["complex",3]],[[["u32",15]],["complex",3]],[[],["complex",3]],[[],["complex",3]],null,[[]],[[["complex",3]]],[[["complex",3]]],[[]],[[["complex",3]]],[[["complex",3]]],[[]],[[]],[[]],[[]],[[["i32",15],["u32",15]],["i32",15]],[[]],[[]],[[],["complex",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[["complex",3]]],[[["complex",3]]],[[]],[[]],[[]],[[["complex",3]]],[[["complex",3]]],[[],["complex",3]],[[],["complex",3]],[[],[["option",4,["f32"]],["f32",15]]],[[],[["option",4,["f64"]],["f64",15]]],[[],[["option",4,["i128"]],["i128",15]]],[[],[["i16",15],["option",4,["i16"]]]],[[],[["option",4,["i32"]],["i32",15]]],[[],[["i64",15],["option",4,["i64"]]]],[[],[["option",4,["i8"]],["i8",15]]],[[],[["option",4,["isize"]],["isize",15]]],[[],[["u128",15],["option",4,["u128"]]]],[[],[["u16",15],["option",4,["u16"]]]],[[],[["u32",15],["option",4,["u32"]]]],[[],[["option",4,["u64"]],["u64",15]]],[[],[["option",4,["u8"]],["u8",15]]],[[],[["usize",15],["option",4,["usize"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["complex",3]],[[["i32",15],["u8",15]],[["complex",3,["i32"]],["i32",15]]],[[["i32",15],["u8",15]],["i32",15]],[[["i32",15],["u8",15],["option",4,["i32"]]]],[[["i32",15],["u8",15],["option",4,["i32"]]]],[[["i32",15]]],[[],["complex",3]],null,null,null,[[]],[[]],[[],["iir",3]],[[],["iir",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["str",15],["result",4,["str"]]]],[[]],[[]],[[],[["result",4,["str"]],["str",15]]],[[]],[[["peekable",3,["split"]],["split",3,["char"]]],[["error",4],["result",4,["error"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["vec5",6],["bool",15]]],null,null,null,null,null,null,null,[[]],[[]],[[],["iir",3]],[[],["iir",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[["peekable",3,["split"]],["split",3,["char"]]],[["error",4],["result",4,["error"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["vec5",6],["i32",15]],["i32",15]],null,null,null],"p":[[8,"ComplexExt"],[3,"Complex"],[3,"Accu"],[3,"Lockin"],[3,"Lowpass"],[3,"PLL"],[3,"RPLL"],[3,"Unwrapper"],[8,"MulScaled"],[3,"IIR"],[3,"IIR"]]},\
"lockin":{"doc":"Lockin","t":[17,17,4,13,13,13,4,13,13,13,13,13,13,3,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,12,5,5,5,3,6,3,5,3,3,3,3,3,5,5,5,3,3,3,3,3,3,3,3,3,3,5,5,5,3,3,3,3,5,5,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,0,5,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,5,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,0,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,5,11,11,11,11,11,11,12,12,12,12,0,5,12,12,12,12,12,0,12,12,0,5,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,12,3,12,0,5,3,3,12,12,12,12,12,12,12,12,12,3,0,3,12,12,12,3,0,3,12,12,12,12],"n":["ADC_SAMPLE_TICKS_LOG2","BATCH_SIZE_SIZE_LOG2","Conf","External","InPhase","Internal","LockinMode","LogPower","Magnitude","Modulation","Phase","Quadrature","ReferenceFrequency","Settings","afe","app","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","default","deserialize","deserialize","deserialize","eq","fmt","fmt","fmt","from","from","from","into","into","into","lockin_harmonic","lockin_mode","lockin_phase","lockin_tc","output_conf","pll_tc","stream_target","string_set","string_set","string_set","telemetry_period","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","DCMI","DMA1_STR4","ETH","Local","Monotonic","Shared","TIM15","__rtic_internal_Monotonics","__rtic_internal_eth_Context","__rtic_internal_ethernet_linkSharedResources","__rtic_internal_ethernet_link_Context","__rtic_internal_ethernet_link_Monotonic_SpawnHandle","__rtic_internal_ethernet_link_Monotonic_spawn_after","__rtic_internal_ethernet_link_Monotonic_spawn_at","__rtic_internal_ethernet_link_spawn","__rtic_internal_idleSharedResources","__rtic_internal_idle_Context","__rtic_internal_init_Context","__rtic_internal_processLocalResources","__rtic_internal_processSharedResources","__rtic_internal_process_Context","__rtic_internal_settings_updateLocalResources","__rtic_internal_settings_updateSharedResources","__rtic_internal_settings_update_Context","__rtic_internal_settings_update_Monotonic_SpawnHandle","__rtic_internal_settings_update_Monotonic_spawn_after","__rtic_internal_settings_update_Monotonic_spawn_at","__rtic_internal_settings_update_spawn","__rtic_internal_telemetryLocalResources","__rtic_internal_telemetrySharedResources","__rtic_internal_telemetry_Context","__rtic_internal_telemetry_Monotonic_SpawnHandle","__rtic_internal_telemetry_Monotonic_spawn_after","__rtic_internal_telemetry_Monotonic_spawn_at","__rtic_internal_telemetry_spawn","adcs","adcs","afes","afes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","cancel","cancel","core","cs","dacs","dacs","device","digital_inputs","digital_inputs","eth","eth","ethernet_link","ethernet_link","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generator","generator","idle","idle","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","local","local","local","lockin","lockin","monotonics","network","network","network","network","network","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","pll","pll","process","process","reschedule_after","reschedule_after","reschedule_after","reschedule_at","reschedule_at","reschedule_at","settings","settings","settings","settings","settings_update","settings_update","shared","shared","shared","shared","shared","shared_resources","signal_generator","signal_generator","telemetry","telemetry","telemetry","telemetry","telemetry","timestamper","timestamper","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Monotonic","SharedResources","network","SharedResources","network","Monotonic","now","LocalResources","SharedResources","adcs","dacs","generator","lockin","pll","settings","signal_generator","telemetry","timestamper","LocalResources","Monotonic","SharedResources","afes","network","settings","LocalResources","Monotonic","SharedResources","digital_inputs","network","settings","telemetry"],"q":["lockin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lockin::applockin::app::ethernet_link","","","lockin::app::idle","","lockin::app::monotonics","lockin::app::monotonics::Monotonic","lockin::app::process","","","","","","","","","","","lockin::app::settings_update","","","","","","lockin::app::telemetry","","","","","",""],"d":["","","","Utilize an external modulation signal supplied to DI0","Output the in-phase component of the lockin signal.","Utilize an internally generated reference for demodulation","","Output the logarithmic power of the lockin","Output the lockin magnitude.","Output the lockin internal modulation frequency as a …","Output the phase of the lockin","Output the quadrature component of the lockin signal.","Output the lockin reference frequency as a sinusoid","","Configure the Analog Front End (AFE) gain.","The RTIC application module","","","","","","","","","","","","","","","","","","","","","","","","Specifies which harmonic to use for the lockin.","Specifies the operational mode of the lockin.","Specifies the LO phase offset.","Specifies the lockin time constant.","Specifies DAC output mode.","Specifis the PLL time constant.","Specifies the target for data livestreaming.","","","","Specifies the telemetry output period in seconds.","","","","","","","","","","","Interrupt handler to dispatch tasks at priority 1","Main DSP processing routine.","","","User code from within the module","","","Monotonics used by the system","Execution context","Shared resources <code>ethernet_link</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","Shared resources <code>idle</code> has access to","Execution context","Execution context","Local resources <code>process</code> has access to","Shared resources <code>process</code> has access to","Execution context","Local resources <code>settings_update</code> has access to","Shared resources <code>settings_update</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","Local resources <code>telemetry</code> has access to","Shared resources <code>telemetry</code> has access to","Execution context","","Spawns the task after a set duration relative to the …","Spawns the task at a fixed time instant","Spawns the task directly","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Core (Cortex-M) peripherals","Critical section token for init","","","Device peripherals","","","Hardware task","","Software task","","","","","","","","","","","","","","","","","","","","","","","","","","","","Idle loop","","Initialization function","User code end","","","","","","","","","","","","","","","","","","","","","","Local Resources this task has access to","Local Resources this task has access to","Local Resources this task has access to","","","Holds static methods for each monotonic.","","","","","","","","","","","","","","","","","","","","","","","Hardware task","Main DSP processing routine.","","","","","","","","","","","Software task","","Shared Resources this task has access to","Shared Resources this task has access to","Shared Resources this task has access to","Shared Resources this task has access to","Shared Resources this task has access to","","","","Software task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shared resources <code>ethernet_link</code> has access to","","Shared resources <code>idle</code> has access to","","This module holds the static implementation for …","Read the current time from this monotonic","Local resources <code>process</code> has access to","Shared resources <code>process</code> has access to","","","","","","","","","","Local resources <code>settings_update</code> has access to","","Shared resources <code>settings_update</code> has access to","","","","Local resources <code>telemetry</code> has access to","","Shared resources <code>telemetry</code> has access to","","","",""],"i":[0,0,0,1,2,1,0,2,2,2,2,2,2,0,3,0,2,1,3,2,1,3,2,1,3,3,2,1,3,1,2,1,3,2,1,3,2,1,3,3,3,3,3,3,3,3,2,1,3,3,2,1,3,2,1,3,2,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,5,7,8,5,4,9,10,11,6,12,13,14,7,15,16,17,18,19,20,21,22,23,24,8,5,4,9,10,11,6,12,13,14,7,15,16,17,18,19,20,21,22,23,24,17,21,24,9,9,5,6,9,5,18,0,0,0,0,17,21,24,8,5,4,9,10,11,6,12,13,14,7,15,16,17,18,19,20,21,22,23,24,5,6,0,0,0,0,8,5,4,9,10,11,6,12,13,14,7,15,16,17,18,19,20,21,22,23,24,13,16,20,5,6,0,8,10,15,19,22,9,10,11,6,12,13,14,7,15,16,18,19,20,22,23,5,6,0,0,17,21,24,17,21,24,8,12,15,19,0,0,11,13,16,20,23,0,5,6,0,0,8,12,19,5,6,8,5,4,9,10,11,6,12,13,14,7,15,16,17,18,19,20,21,22,23,24,8,5,4,9,10,11,6,12,13,14,7,15,16,17,18,19,20,21,22,23,24,8,5,4,9,10,11,6,12,13,14,7,15,16,17,18,19,20,21,22,23,24,0,0,22,0,10,0,0,0,0,6,6,6,6,6,12,6,12,6,0,0,0,7,15,15,0,0,0,18,19,19,19],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["conf",4]],[[],["lockinmode",4]],[[],["settings",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["lockinmode",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["peekable",3,["split"]],["split",3,["char"]]],[["result",4,["error"]],["error",4]]],[[["peekable",3,["split"]],["split",3,["char"]]],[["result",4,["error"]],["error",4]]],[[["peekable",3,["split"]],["split",3,["char"]]],[["result",4,["error"]],["error",4]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,null,[[]],null,null,null,null,null,[[],[["result",4,["spawnhandle"]],["spawnhandle",3]]],[[["systemtimer",3],["instant",3,["systemtimer"]]],[["result",4,["spawnhandle"]],["spawnhandle",3]]],[[],["result",4]],null,null,null,null,null,null,null,null,null,null,[[],[["result",4,["spawnhandle"]],["spawnhandle",3]]],[[["systemtimer",3],["instant",3,["systemtimer"]]],[["result",4,["spawnhandle"]],["spawnhandle",3]]],[[],["result",4]],null,null,null,null,[[],[["result",4,["spawnhandle"]],["spawnhandle",3]]],[[["systemtimer",3],["instant",3,["systemtimer"]]],[["result",4,["spawnhandle"]],["spawnhandle",3]]],[[],["result",4]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,[[["context",3]]],null,[[["context",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["context",3]]],null,[[["context",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["peripherals",3]]],[[["priority",3]]],[[["priority",3]]],[[]],[[["priority",3]]],[[["priority",3]]],[[["priority",3]]],[[]],[[["priority",3]]],[[["priority",3]]],[[]],[[["priority",3]]],[[["priority",3]]],[[["priority",3]]],[[["priority",3]]],null,null,null,[[["context",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["systemtimer",3],["instant",3,["systemtimer"]]],["result",4]],[[["systemtimer",3],["instant",3,["systemtimer"]]],["result",4]],[[["systemtimer",3],["instant",3,["systemtimer"]]],["result",4]],null,null,null,null,null,[[["context",3]]],null,null,null,null,null,null,null,null,null,[[["context",3]]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[],[["systemtimer",3],["instant",3,["systemtimer"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"LockinMode"],[4,"Conf"],[3,"Settings"],[3,"__rtic_internal_Monotonics"],[3,"Local"],[3,"__rtic_internal_processLocalResources"],[3,"__rtic_internal_settings_updateLocalResources"],[3,"Shared"],[3,"__rtic_internal_init_Context"],[3,"__rtic_internal_idleSharedResources"],[3,"__rtic_internal_idle_Context"],[3,"__rtic_internal_processSharedResources"],[3,"__rtic_internal_process_Context"],[3,"__rtic_internal_eth_Context"],[3,"__rtic_internal_settings_updateSharedResources"],[3,"__rtic_internal_settings_update_Context"],[3,"__rtic_internal_settings_update_Monotonic_SpawnHandle"],[3,"__rtic_internal_telemetryLocalResources"],[3,"__rtic_internal_telemetrySharedResources"],[3,"__rtic_internal_telemetry_Context"],[3,"__rtic_internal_telemetry_Monotonic_SpawnHandle"],[3,"__rtic_internal_ethernet_linkSharedResources"],[3,"__rtic_internal_ethernet_link_Context"],[3,"__rtic_internal_ethernet_link_Monotonic_SpawnHandle"]]},\
"miniconf":{"doc":"Miniconf","t":[13,13,13,4,8,24,24,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,5,11,12],"n":["AtomicUpdateRequired","BadIndex","Deserialization","Error","Miniconf","Miniconf","MiniconfAtomic","MqttClient","PathNotFound","PathTooLong","PathTooShort","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","from","from","from","into","into","ne","new","settings","string_set","try_from","try_from","try_into","try_into","type_id","type_id","update","update","0"],"q":["miniconf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","miniconf::Error"],"d":["The path provided refers to a member of a configurable …","When indexing into an array, the index provided was out of …","The value provided for configuration could not be …","Errors that occur during settings configuration","","Derive the Miniconf trait for custom types.","Derive the Miniconf trait for a custom type that must be …","MQTT settings interface.","The provided path wasn’t found in the structure.","The provided path was valid, but there was trailing data …","The provided path was valid, but did not specify a value …","","","","","","","","","","","","","Construct a new MQTT settings interface.","Get the current settings from miniconf.","","","","","","","","Convenience function to update settings directly from a …","Update the MQTT interface and service the network",""],"i":[1,1,1,0,0,0,0,0,1,1,1,2,1,2,1,1,1,2,1,1,2,1,1,2,2,3,2,1,2,1,2,1,0,2,4],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",4]],["error",4]],[[]],[[]],[[["error",4]],["bool",15]],[[["ipaddr",4],["str",15]],[["error",4],["result",4,["error"]]]],[[]],[[["split",3,["char"]],["peekable",3,["split"]]],[["result",4,["error"]],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15]],[["result",4,["error"]],["error",4]]],[[],[["bool",15],["error",4],["result",4,["bool","error"]]]],null],"p":[[4,"Error"],[3,"MqttClient"],[8,"Miniconf"],[13,"Deserialization"]]},\
"stabilizer":{"doc":"","t":[0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,6,17,3,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,4,3,3,3,4,13,4,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,3,3,13,3,13,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,11,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,10,10,11,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,10,3,3,3,3,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,5,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,13,4,13,13,13,4,3,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,6,4,3,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,5,11,11,11,12,0,11,12,0,0,12,11,11,11,11,11,11,11,11,11,11,13,3,3,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,12,12,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["hardware","net","AFE0","AFE1","DigitalInput0","DigitalInput1","EthernetPhy","NetworkStack","adc","afe","dac","design_parameters","input_stamper","pounder","setup","signal_generator","system_timer","0","Adc0Input","Adc1Input","AdcCode","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","from","from","from","from","from","into","into","into","lock","lock","new","new","start","start","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_buffer","with_buffer","G1","G10","G2","G5","Gain","ProgrammableGainAmplifier","as_multiplier","borrow","borrow","borrow_mut","borrow_mut","clone","deserialize","fmt","from","from","get_gain","into","into","new","serialize","set_gain","string_set","try_from","try_from","try_from","try_from_primitive","try_into","try_into","type_id","type_id","0","Dac0Output","Dac1Output","DacCode","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","from","from","from","from","from","into","into","into","lock","lock","new","new","start","start","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_buffer","with_buffer","ADC_DAC_SCK_MAX","ADC_SETUP_TIME","DDS_MULTIPLIER","DDS_REF_CLK","DDS_SYNC_CLK_DIV","DDS_SYSTEM_CLK","MAX_SAMPLE_BUFFER_SIZE","POUNDER_IO_UPDATE_DELAY","POUNDER_IO_UPDATE_DURATION","POUNDER_QSPI_FREQUENCY","SampleBuffer","TIMER_FREQUENCY","InputStamper","borrow","borrow_mut","from","into","latest_timestamp","new","start","try_from","try_into","type_id","Adc","AttLe0","AttLe1","AttLe2","AttLe3","AttRstN","Bounds","Channel","ChannelState","DdsChannelState","DdsClockConfig","Error","ExtClkSel","GpioPin","I2c","In0","In1","InputChannelState","InvalidAddress","InvalidChannel","Led4Green","Led5Red","Led6Green","Led7Red","Led8Green","Led9Red","OscEnN","Out0","Out1","OutputChannelState","PounderDevices","Qspi","QspiInterface","Spi","amplitude","attenuation","attenuation","attenuation","attenuators","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone","clone","clone","clone","clone","configure_mode","dds_output","deserialize","deserialize","deserialize","deserialize","deserialize","enabled","external_clock","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frequency","from","from","from","from","from","from","from","from","from","from","hrtimer","into","into","into","into","into","into","into","into","into","into","latch_attenuator","mixer","multiplier","new","new","parameters","phase_offset","power","qspi","read","reference_clock","reset_attenuators","rf_power","sample_converter","serialize","serialize","serialize","serialize","serialize","start_stream","transfer_attenuators","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","AttenuatorInterface","get_attenuation","latch_attenuator","reset_attenuators","set_attenuation","transfer_attenuators","DdsOutput","ProfileBuilder","borrow","borrow","borrow_mut","borrow_mut","builder","from","from","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","update_channels","write_profile","Channel","HighResTimerE","One","Two","borrow","borrow","borrow_mut","borrow_mut","configure_single_shot","from","from","into","into","new","trigger","try_from","try_from","try_into","try_into","type_id","type_id","PowerMeasurementInterface","measure_power","sample_converter","NetStorage","NetworkDevices","PounderDevices","StabilizerDevices","TcpSocketStorage","UdpSocketStorage","adc_dac_timer","adcs","afes","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","dacs","dds_output","default","digital_inputs","from","from","from","from","from","from","into","into","into","into","into","into","ip_addrs","mac_address","neighbor_cache","net","phy","pounder","routes_cache","setup","sockets","stack","tcp_socket_storage","timestamp_timer","timestamper","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","udp_socket_storage","BasicConfig","Config","Cosine","Error","InvalidAmplitude","InvalidFrequency","InvalidSymmetry","Signal","SignalGenerator","Square","Triangle","amplitude","amplitude","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","default","default","default","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","frequency","frequency_tuning_word","from","from","from","from","from","into","into","into","into","into","into_iter","new","next","signal","signal","string_set","string_set","symmetry","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_config","type_id","type_id","type_id","type_id","type_id","update_waveform","SystemTimer","borrow","borrow_mut","clear_compare_flag","clone","default","fmt","from","initialize","into","reset","set_compare","try_from","try_into","try_now","type_id","DEFAULT_MQTT_BROKER","NetworkReference","NetworkState","NetworkUsers","NoChange","NoChange","SettingsChanged","UpdateState","Updated","Updated","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","configure_streaming","data_stream","direct_stream","eq","eq","from","from","from","get_device_prefix","into","into","into","miniconf","network_processor","new","processor","shared","telemetry","telemetry","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","AdcDacData","DataStream","FrameGenerator","StreamFormat","StreamTarget","Unknown","add","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","default","deserialize","eq","fmt","fmt","from","from","from","from","into","into","into","into","ip","port","process","set_remote","setup_streaming","string_set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","NetworkProcessor","borrow","borrow_mut","from","handle_link","into","new","try_from","try_into","type_id","update","NetworkManager","NetworkStackProxy","acquire_stack","borrow","borrow","borrow_mut","borrow_mut","close","close","connect","connect","from","from","into","into","is_connected","lock","new","receive","receive","send","send","socket","socket","try_from","try_from","try_into","try_into","type_id","type_id","Telemetry","TelemetryBuffer","TelemetryClient","adcs","adcs","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","dacs","dacs","default","digital_inputs","digital_inputs","finalize","from","from","from","into","into","into","new","publish","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update"],"q":["stabilizer","","stabilizer::hardware","","","","","","","","","","","","","","","stabilizer::hardware::adc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::afe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::dac","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::design_parameters","","","","","","","","","","","","stabilizer::hardware::input_stamper","","","","","","","","","","","stabilizer::hardware::pounder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::pounder::attenuators","","","","","","stabilizer::hardware::pounder::dds_output","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::pounder::hrtimer","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::pounder::rf_power","","","stabilizer::hardware::setup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::signal_generator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::hardware::system_timer","","","","","","","","","","","","","","","","stabilizer::net","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::net::data_stream","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::net::network_processor","","","","","","","","","","","stabilizer::net::shared","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stabilizer::net::telemetry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","Represents data associated with ADC.","Represents data associated with ADC.","A type representing an ADC sample.","","","","","","","","Construct an ADC code from a provided binary …","Construct an ADC code from the stabilizer-defined code …","","","","","","","","","Construct the ADC input channel.","Construct the ADC input channel.","Enable the ADC DMA transfer sequence.","Enable the ADC DMA transfer sequence.","","","","","","","","","","Wait for the transfer of the currently active buffer to …","Wait for the transfer of the currently active buffer to …","","","","","","A programmable gain amplifier that allows for setting the …","Get the AFE gain as a numerical value.","","","","","","","","","","Get the programmed gain of the analog front-end.","","","Construct a new programmable gain driver.","","Set the gain of the front-end.","","","","","","","","","","","Represents data associated with DAC.","Represents data associated with DAC.","Custom type for referencing DAC output codes. The internal …","","","","","","","","Create a dac code from the provided DAC output code.","Encode signed 16-bit values into DAC offset binary for a …","","","","","","","","","Construct the DAC output channel.","Construct the DAC output channel.","","","","","","","","","","","","","Wait for the transfer of the currently active buffer to …","Wait for the transfer of the currently active buffer to …","The maximum DAC/ADC serial clock line frequency. This is a …","The ADC setup time is the number of seconds after the CSn …","The multiplier used for the DDS reference clock PLL.","The DDS reference clock frequency in MHz.","The divider from the DDS system clock to the SYNC_CLK …","The DDS system clock frequency after the internal PLL …","The maximum ADC/DAC sample processing buffer size.","The delay after initiating a QSPI transfer before …","The duration to assert IO_Update for the pounder DDS.","The QSPI frequency for communicating with the pounder DDS.","","The optimal counting frequency of the hardware timers used …","The timestamper for DI0 reference clock inputs.","","","","","Get the latest timestamp that has occurred.","Construct the DI0 input timestamper.","Start to capture timestamps on DI0.","","","","","","","","","","","The numerical value (discriminant) of the Channel enum is …","","","","","","","","","","","","","","","","","","","","","","","A structure containing implementation for Pounder hardware.","","A structure for the QSPI interface for the DDS.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configure the operations mode of the interface.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Latch a configuration into a digital attenuator.","","","Initialize the QSPI interface.","Construct and initialize pounder-specific hardware.","","","","","","","Reset all of the attenuators to a power-on default state.","","Sample an ADC channel.","","","","","","","Read the raw attenuation codes stored in the attenuator …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write data over QSPI to the DDS.","Provide an interface for managing digital attenuators on …","Get the attenuation of a channel.","","","Set the attenuation of a single channel.","","The DDS profile update stream.","A temporary builder for serializing and writing profiles.","","","","","Get a builder for serializing a Pounder DDS profile.","","","","","Construct a new DDS output stream.","","","","","","","Update a number of channels with the provided configuration","Write the profile to the DDS asynchronously.","A HRTimer output channel.","The high resolution timer. Currently, only Timer E is …","","","","","","","Configure the timer to operate in single-shot mode.","","","","","Construct a new high resolution timer for generating …","Generate a single trigger of the timer to start the output …","","","","","","","Provide an interface to measure RF input power in dBm.","Measure the power of an input channel in dBm.","","","The available networking devices on Stabilizer.","The available Pounder-specific hardware interfaces.","The available hardware interfaces on Stabilizer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configure the stabilizer hardware for operation.","","","","","","","","","","","","","","","","","","","","","","","","","Basic configuration for a generated signal.","","","Represents the errors that can occur when attempting to …","The provided amplitude is out-of-range.","The provided frequency is out of range.","The provided symmetry is out of range.","Types of signals that can be generated.","","","","The amplitude of the output signal in volts.","The full-scale output code of the signal","","","","","","","","","","","","","","","","","","","","","","","","","The frequency of the generated signal in Hertz.","The frequency tuning word of the signal. Phase is …","","","","","","","","","","","","Construct a new signal generator with some specific config.","Get the next value in the generator sequence.","The signal type that should be generated. See Signal …","The type of signal being generated","","","The normalized symmetry of the signal. At 0% symmetry, the …","","","","","","","","","","","Convert configuration into signal generator values.","","","","","","Update waveform generation settings.","System timer used for implementing RTIC scheduling.","","","","","","","","Initialize the system timer.","","Reset the timer count.","","","","","","The default MQTT broker IP address if unspecified.","","","A structure of Stabilizer’s default network users.","","","","","","","","","","","","","","","Enable live data streaming.","Stabilizer data stream capabilities","Direct the stream to the provided remote target.","","","","","","Get the MQTT prefix of a device.","","","","","","Construct Stabilizer’s default network users.","","","","","","","","","","","","","","Update and process all of the network users state.","Streamed data contains ADC0, ADC1, DAC0, and DAC1 …","The “consumer” portion of the data stream.","The data generator for a stream.","Specifies the format of streamed data","Represents the destination for the UDP stream to send data …","Reserved, unused format specifier.","Add a batch to the current stream frame.","","","","","","","","","","","","","","","","","","","","","","","","","","Process any data for transmission.","Configure the remote endpoint of the stream.","Configure streaming on a device.","","","","","","","","","","","","","","Processor for managing network hardware.","","","","Handle ethernet link connection status.","","Construct a new network processor.","","","","Process and update the state of the network.","A manager for a shared network stack.","A basic proxy that references a shared network stack.","Acquire a proxy to the shared network stack.","","","","","","","","","","","","","","Using the proxy, access the underlying network stack …","Construct a new manager for a shared network stack","","","","","","","","","","","","","The telemetry structure is data that is ultimately …","The telemetry buffer is used for storing sample values …","The telemetry client for reporting telemetry data over …","The latest input sample on ADC0/ADC1.","Most recent input voltage measurement.","","","","","","","","The latest output code on DAC0/DAC1.","Most recent output voltage.","","The latest digital input states during processing.","Most recent digital input assertion state.","Convert the telemetry buffer to finalized, SI-unit …","","","","","","","Construct a new telemetry client.","Publish telemetry over MQTT","","","","","","","","","","","Update the telemetry client"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,2,3,1,2,3,1,1,1,1,2,3,1,2,3,2,3,2,3,2,3,1,2,3,1,2,3,1,2,3,2,3,4,4,4,4,0,0,4,5,4,5,4,4,4,4,5,4,5,5,4,5,4,5,4,5,4,4,4,5,4,5,4,6,0,0,0,6,7,8,6,7,8,6,6,6,6,7,8,6,7,8,7,8,7,8,7,8,6,6,7,8,6,7,8,6,7,8,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,10,11,11,11,11,11,10,0,0,0,0,0,11,0,10,12,12,0,10,10,11,11,11,11,11,11,11,12,12,0,0,10,0,10,13,14,15,16,0,11,17,18,10,12,13,14,15,16,19,11,17,18,10,12,13,14,15,16,19,16,10,12,13,14,15,16,19,17,0,13,14,15,16,19,13,19,10,12,13,14,15,16,19,13,11,17,18,10,12,13,14,15,16,19,0,11,17,18,10,12,13,14,15,16,19,18,15,19,17,18,14,13,15,17,17,19,18,0,18,13,14,15,16,19,17,18,11,17,18,10,12,13,14,15,16,19,11,17,18,10,12,13,14,15,16,19,11,17,18,10,12,13,14,15,16,19,17,0,20,20,20,20,20,0,0,21,22,21,22,21,21,22,21,22,21,21,22,21,22,21,22,22,22,0,0,23,23,23,24,23,24,24,23,24,23,24,24,24,23,24,23,24,23,24,0,25,25,0,0,0,0,0,0,26,26,26,27,28,29,26,30,31,27,28,29,26,30,31,31,26,30,27,26,27,28,29,26,30,31,27,28,29,26,30,31,27,29,27,26,29,30,27,0,27,29,27,26,26,27,28,29,26,30,31,27,28,29,26,30,31,27,28,29,26,30,31,27,0,0,32,0,33,33,33,0,0,32,32,34,35,32,34,33,35,36,32,34,33,35,36,32,34,33,35,34,35,36,32,34,32,34,33,35,36,34,35,32,34,33,35,36,32,34,33,35,36,36,36,36,34,35,32,34,34,32,34,33,35,36,32,34,33,35,36,34,32,34,33,35,36,36,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,0,38,39,39,0,38,39,40,38,39,40,38,39,38,39,40,0,40,38,39,40,38,39,0,40,38,39,40,0,40,40,0,0,40,40,38,39,40,38,39,40,38,39,40,41,0,0,0,0,41,42,42,43,44,41,42,43,44,41,44,41,44,44,41,44,41,42,43,44,41,42,43,44,41,44,44,43,43,0,44,42,43,44,41,42,43,44,41,42,43,44,41,0,45,45,45,45,45,45,45,45,45,45,0,0,46,46,47,46,47,47,47,47,47,46,47,46,47,47,47,46,47,47,47,47,47,47,46,47,46,47,46,47,0,0,0,48,49,50,48,49,50,48,49,48,48,49,48,48,49,48,50,48,49,50,48,49,50,50,49,50,48,49,50,48,49,50,48,49,50],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["adccode",3]],[[["u16",15]]],[[["i16",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["spi2",3],["stream0",3,["dma1"]],["spi",3,["spi2","enabled","u16"]],["channel1",3],["channel1",3],["enabled",3],["usize",15],["stream2",3,["dma1"]],["u16",15],["stream1",3,["dma1"]],["dma1",3]]],[[["channel2",3],["stream4",3,["dma1"]],["stream3",3,["dma1"]],["enabled",3],["stream5",3,["dma1"]],["usize",15],["spi3",3],["u16",15],["channel2",3],["spi",3,["spi3","enabled","u16"]],["dma1",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["result",4,["dmaerror"]],["dmaerror",4]]],[[],[["result",4,["dmaerror"]],["dmaerror",4]]],null,null,null,null,null,null,[[],["f32",15]],[[]],[[]],[[]],[[]],[[],["gain",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["gain",4]],[[]],[[]],[[]],[[],["result",4]],[[["gain",4]]],[[["peekable",3,["split"]],["split",3,["char"]]],[["error",4],["result",4,["error"]]]],[[],["result",4]],[[["u8",15]],[["result",4,["tryfromprimitiveerror"]],["tryfromprimitiveerror",3]]],[[],["result",4]],[[],[["result",4,["tryfromprimitiveerror"]],["tryfromprimitiveerror",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["daccode",3]],[[["u16",15]]],[[["i16",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["stream6",3,["dma1"]],["spi",3,["spi4","enabled","u16"]],["spi4",3],["enabled",3],["usize",15],["u16",15],["channel3",3],["dma1",3]]],[[["spi",3,["spi5","enabled","u16"]],["spi5",3],["enabled",3],["stream7",3,["dma1"]],["channel4",3],["usize",15],["u16",15],["dma1",3]]],[[]],[[]],[[],["result",4]],[[["f32",15]],[["daccode",3],["result",4,["daccode"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["result",4,["dmaerror"]],["dmaerror",4]]],[[],[["result",4,["dmaerror"]],["dmaerror",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],[["result",4,["option","option"]],["option",4,["u32"]]]],[[["alternate",3,["af2"]],["channel4",3],["pa3",3,["alternate"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["error",4]],[[],["channel",4]],[[],["ddschannelstate",3]],[[],["channelstate",3]],[[],["inputchannelstate",3]],[[],["outputchannelstate",3]],[[],["ddsclockconfig",3]],[[["mode",4]],[["error",4],["result",4,["error"]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["channel",4]],[["error",4],["result",4,["error"]]]],null,null,[[["qspi",3]],[["error",4],["result",4,["error"]]]],[[["u8",15],["i2c",3,["i2c1"]],["spi",3,["spi1","enabled","u8"]],["pf11",3,["analog"]],["spi1",3],["analog",3],["enabled",3],["adc1",3],["adc",3,["adc1","enabled"]],["adc",3,["adc2","enabled"]],["pf14",3,["analog"]],["mcp23017",3,["i2c"]],["enabled",3],["adc2",3]],[["error",4],["result",4,["error"]]]],null,null,null,null,[[["u8",15]],[["error",4],["result",4,["error"]]]],null,[[],[["error",4],["result",4,["error"]]]],null,[[["channel",4]],[["result",4,["f32","error"]],["f32",15],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u8",15]],[["error",4],["result",4,["error"]]]],null,[[["channel",4]],[["result",4,["f32","error"]],["f32",15],["error",4]]],[[["channel",4]],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[["channel",4],["f32",15]],[["result",4,["f32","error"]],["f32",15],["error",4]]],[[],[["error",4],["result",4,["error"]]]],null,null,[[]],[[]],[[]],[[]],[[],["profilebuilder",3]],[[]],[[]],[[]],[[]],[[["highrestimere",3],["qspiinterface",3],["ddsconfig",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["option",4,["u16"]],["u32",15],["u16",15],["option",4,["u32"]]]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[["channel",4],["f32",15]]],[[]],[[]],[[]],[[]],[[["hrtim_time",3],["coreclocks",3],["hrtim_common",3],["hrtim_master",3],["hrtim",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[["channel",4]],[["result",4,["f32","error"]],["f32",15],["error",4]]],[[["channel",4]],[["result",4,["f32","error"]],["f32",15],["error",4]]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tcpsocketstorage",3]],null,null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["usize",15],["peripherals",3],["peripherals",3],["u32",15]]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["signal",4]],[[],["basicconfig",3]],[[],["error",4]],[[],["config",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["config",3]]],[[],[["option",4,["i16"]],["i16",15]]],null,null,[[["peekable",3,["split"]],["split",3,["char"]]],[["error",4],["result",4,["error"]]]],[[["peekable",3,["split"]],["split",3,["char"]]],[["error",4],["result",4,["error"]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u8",15]],[["result",4,["config","error"]],["config",3],["error",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["config",3]]],null,[[]],[[]],[[]],[[],["systemtimer",3]],[[],["systemtimer",3]],[[["formatter",3]],["result",6]],[[]],[[["tim15",3],["timer",3,["tim15"]]]],[[]],[[]],[[["instant",3]]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["instant","error"]],["instant",3],["error",4]]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["updatestate",4]],[[],["networkstate",4]],[[["u8",15]],["framegenerator",3]],null,[[["socketaddr",4]]],[[["updatestate",4]],["bool",15]],[[["networkstate",4]],["bool",15]],[[]],[[]],[[]],[[["str",15],["ethernetaddress",3]],["string",3]],[[]],[[]],[[]],null,null,[[["networkstack",6],["ethernetaddress",3],["ethernetphy",6],["str",15],["ipaddr",4]]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["networkstate",4]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["streamtarget",3]],[[],["streamformat",4]],[[],["streamtarget",3]],[[],["result",4]],[[["streamformat",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[["socketaddr",4]]],[[["networkreference",6]]],[[["peekable",3,["split"]],["split",3,["char"]]],[["error",4],["result",4,["error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[["ethernetphy",6],["networkreference",6]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["updatestate",4]],null,null,[[],[["networkstack",6],["networkstackproxy",3,["networkstack"]]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["socketaddr",4]],["result",6]],[[["socketaddr",4]],["result",4]],[[]],[[]],[[]],[[]],[[],[["result",4,["bool"]],["bool",15]]],[[["fnonce",8]]],[[["networkstack",6]]],[[],["result",6]],[[],[["usize",15],["result",6,["usize"]]]],[[],["result",6]],[[],[["usize",15],["result",6,["usize"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["telemetrybuffer",3]],null,null,[[]],null,null,[[["gain",4]],["telemetry",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15],["ipaddr",4],["networkreference",6]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]]],"p":[[3,"AdcCode"],[3,"Adc0Input"],[3,"Adc1Input"],[4,"Gain"],[3,"ProgrammableGainAmplifier"],[3,"DacCode"],[3,"Dac0Output"],[3,"Dac1Output"],[3,"InputStamper"],[4,"Error"],[4,"GpioPin"],[4,"Channel"],[3,"DdsChannelState"],[3,"ChannelState"],[3,"InputChannelState"],[3,"OutputChannelState"],[3,"QspiInterface"],[3,"PounderDevices"],[3,"DdsClockConfig"],[8,"AttenuatorInterface"],[3,"DdsOutput"],[3,"ProfileBuilder"],[4,"Channel"],[3,"HighResTimerE"],[8,"PowerMeasurementInterface"],[3,"StabilizerDevices"],[3,"NetStorage"],[3,"UdpSocketStorage"],[3,"NetworkDevices"],[3,"PounderDevices"],[3,"TcpSocketStorage"],[4,"Signal"],[4,"Error"],[3,"BasicConfig"],[3,"Config"],[3,"SignalGenerator"],[3,"SystemTimer"],[4,"UpdateState"],[4,"NetworkState"],[3,"NetworkUsers"],[4,"StreamFormat"],[3,"FrameGenerator"],[3,"DataStream"],[3,"StreamTarget"],[3,"NetworkProcessor"],[3,"NetworkManager"],[3,"NetworkStackProxy"],[3,"TelemetryBuffer"],[3,"Telemetry"],[3,"TelemetryClient"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};